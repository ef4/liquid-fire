{{#if @containerless}}
  {{! Why are we using inline-ifs here? Because we want to force
    conversion to a boolean while respecting Ember's built in `if`
    semantics.

    Why not just defer the conversion until the real block `if` below?
    Because we don't want liquid-versions to treat distinct values of
    the same truthiness as distinct.
  }}
  
  <LiquidVersions
    @value={{if this.inverted (if @predicate false true) (if @predicate true false)}}
    @matchContext={{hash helperName=this.helperName}}
    @use={{@use}}
    @rules={{@rules}}
    @containerElement={{@containerElement}}
    @renderWhenFalse={{has-block "inverse"}}
    @class={{@class}} as |valueVersion|
  >
    {{#if valueVersion}}
      {{yield}}
    {{else}}
      {{yield to="inverse"}}
    {{/if}}
  </LiquidVersions>
{{else}}
  <LiquidContainer
    id={{@containerId}}
    class={{@class}}
    @growDuration={{@growDuration}}
    @growPixelsPerSecond={{@growPixelsPerSecond}}
    @growEasing={{@growEasing}}
    @shrinkDelay={{@shrinkDelay}}
    @growDelay={{@growDelay}}
    @enableGrowth={{@enableGrowth}} as |container|
  >
    <LiquidVersions
      @value={{if this.inverted (if @predicate false true) (if @predicate true false)}}
      @notify={{container}}
      @matchContext={{hash helperName=this.helperName}}
      @use={{@use}}
      @rules={{@rules}}
      @containerElement={{container.element}}
      @renderWhenFalse={{has-block "inverse"}} as |valueVersion|
    >
      {{#if valueVersion}}
        {{yield}}
      {{else}}
        {{yield to="inverse"}}
      {{/if}}
    </LiquidVersions>
  </LiquidContainer>
{{/if}}